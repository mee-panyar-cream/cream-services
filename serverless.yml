# NOTE: update this with your service name
service: cream-services

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-localstack

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  localstack:
    host: http://localhost
    stages:
      # list of stages for which the plugin should be enabled
      - local
      - dev
    autostart: false  # optional - start LocalStack in Docker on Serverless deploy
    endpoints:
      # This section is optional - can be used for customizing the target endpoints
      S3: http://localhost:4572
      CloudFormation: http://localhost:4581
      Lambda: http://localhost:4574
      APIGateway : http://localhost:4567
    lambda:
      # Enable this flag to improve performance
      mountCode: False
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: True

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
# environment: ${file(env.yml):${self:provider.stage}}

functions:
  hello: # TODO rename this to "read"
    handler: src/main/functions/readings/read.latest
    events:
      - http:
          path: meter/latest
          method: get
    environment: 
      redis_host: ${file(./build_config/config.${self:provider.stage}.json):redis_host}
      redis_port: ${file(./build_config/config.${self:provider.stage}.json):redis_port}
  create:
    handler: src/main/functions/readings/create.create
    events:
      - http:
          path: meter/input
          method: post

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
